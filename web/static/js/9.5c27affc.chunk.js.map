{"version":3,"sources":["apimiddleware/url.js","apimiddleware/postMethod/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/inventory/Form.js"],"names":["baseURL","basePATH","POST_METHOD","payload","url","token","a","console","log","fetch","method","headers","body","JSON","stringify","response","status","json","res","alert","details","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Form","props","useState","name","setName","quantity","setQuantity","description","setDescription","size","s_size","setSouthSize","setNorthSize","fields","Product_fields","usersData","setData","all","setAll","use","setUse","load","reload","match","params","page","id","setId","_id","set_id","price","setPrice","north_price","setNorthPrice","total","setTotal","product_size","setPS","product_color","setPC","deleteProduct","axios","delete","data","history","goBack","updateProduct","obj","stock","south_price","carton_size","put","window","location","useProduct","product_id","used","post","useEffect","get","north_size","final_history","map","m","i","Date","date","getDate","getMonth","getFullYear","toFixed","action","fetchData","deleteProducts","q_id","lg","style","width","placeholder","required","value","onChange","e","target","marginTop","onClick","block","variant","color","display","justifyContent","marginLeft","cursor","push","xs","htmlFor","type","textAlign","items","scopedSlots","item","sm","md"],"mappings":"4KAAA,oEAAO,IAAMA,EAAU,6BAEVC,EAAW,iC,yECAlBC,EAAW,uCAAG,WAAOC,EAASC,EAAMC,GAAtB,iBAAAC,EAAA,6DAChBC,QAAQC,IAAIL,EAAQH,IAAO,UAAMI,GAAQ,OADzB,kBAGSK,MACjBT,IAAO,UAAMI,GACb,CACIM,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,+BAA4BN,IAEhCO,KAAMC,KAAKC,UAAUX,KAXjB,UAGRY,EAHQ,OAcRR,QAAQC,IAAI,UAAYO,GACF,KAAnBA,EAASC,OAfJ,iCAgBQD,EAASE,OAhBjB,cAgBJC,EAhBI,OAiBLC,MAAM,sBAjBD,kBAkBGD,GAlBH,WAmBoB,KAAnBH,EAASC,OAnBV,kCAoBQD,EAASE,OApBjB,QAoBJC,EApBI,OAqBJX,QAAQC,IAAI,UAAYU,GArBpB,2BAuBoB,KAAnBH,EAASC,OAvBV,kCAwBQD,EAASE,OAxBjB,QAwBJC,EAxBI,OAyBJX,QAAQC,IAAI,UAAYU,GAzBpB,2BA2BoB,KAAnBH,EAASC,OA3BV,kCA4BQD,EAASE,OA5BjB,QA4BJC,EA5BI,OA6BJX,QAAQC,IAAI,MAAQU,GACpBC,MAAMD,EAAIE,QAAQ,GAAGC,SA9BjB,2BAgCmB,KAAnBN,EAASC,OAhCT,kCAiCQD,EAASE,OAjCjB,QAiCJC,EAjCI,OAkCJX,QAAQC,IAAI,MAAQU,GACpBC,MAAM,kBAnCF,0DAuCZZ,QAAQC,IAAI,MAAZ,MACAW,MAAM,EAAD,IAxCO,0DAAH,0DA8CFjB,O,6FC5CA,SAASoB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,+JI4a/EC,UA7ZF,SAACC,GAAW,IAAD,EACMC,qBADN,gCAEQA,sBAFR,gCAGMA,sBAHN,gCAIKA,mBAAS,KAJd,mBAIbC,EAJa,KAINC,EAJM,OAKaF,qBALb,mBAKbG,EALa,KAKFC,EALE,OAMmBJ,mBAAS,IAN5B,mBAMbK,EANa,KAMCC,EAND,OAOMN,qBAPN,mBAObO,EAPa,aAQYP,mBAAS,KARrB,mBAQbQ,EARa,KAQJC,EARI,OASYT,mBAAS,IATrB,mBASJU,GATI,aAWHV,mBAAS,CAAC,OAAQ,OAAU,WAAa,WAAnDW,EAXa,sBAYKX,mBAAS,CAAC,OAAQ,OAAS,UAAW,WAAc,WAAtEY,EAZa,sBAcUZ,mBAAS,IAdnB,mBAcba,EAda,KAcDC,EAdC,OAeGd,mBAAS,IAfZ,mBAebe,EAfa,KAePC,EAfO,OAgBGhB,mBAAS,IAhBZ,mBAgBbiB,EAhBa,KAgBPC,GAhBO,QAiBIlB,oBAAS,GAjBb,qBAiBbmB,GAjBa,MAiBNC,GAjBM,SAkBKpB,mBAASD,EAAMsB,MAAMC,OAAOC,MAlBjC,qBAkBbA,GAlBa,gBAmBCvB,mBAAS,KAnBV,qBAmBbwB,GAnBa,MAmBRC,GAnBQ,SAoBGzB,mBAAS,IApBZ,qBAoBb0B,GApBa,MAoBPC,GApBO,SAqBO3B,mBAAS,IArBhB,qBAqBb4B,GArBa,MAqBLC,GArBK,SAsBkB7B,mBAAS,IAtB3B,qBAsBb8B,GAtBa,MAsBCC,GAtBD,SAuBO/B,mBAAS,IAvBhB,qBAuBbgC,GAvBa,MAuBLC,GAvBK,SAwBWjC,mBAAS,IAxBpB,qBAwBbkC,GAxBa,MAwBEC,GAxBF,SAyBYnC,mBAAS,IAzBrB,qBAyBboC,GAzBa,MAyBGC,GAzBH,MA4BdC,GAAa,uCAAE,4BAAApE,EAAA,kEAEbC,QAAQC,IAAI,QAAU2C,EAAIW,KACX,OAARH,GAHM,gCAGgBgB,IAAMC,OAAN,UAAgB5E,IAAhB,eAA8BmD,EAAIW,MAHlD,6CAGmE,aAARH,GAH3D,kCAGuFgB,IAAMC,OAAN,UAAgB5E,IAAhB,qBAAoCmD,EAAIW,MAH/H,+CAIT,UAARH,GAJiB,kCAIQgB,IAAMC,OAAN,UAAgB5E,IAAhB,kBAAiCmD,EAAIW,MAJ7C,6DAI4Da,IAAMC,OAAN,UAAgB5E,IAAhB,mBAAkCmD,EAAIW,MAJlG,gEAGbe,EAHa,KAKjBtE,QAAQC,IAAI,OAASqE,GACH,KAAfA,EAAK7D,SACJG,MAAM,uBACFgB,EAAM2C,QAAQC,UARL,kDAabxE,QAAQC,IAAI,MAAZ,MAba,0DAAF,qDAkBbwE,GAAa,uCAAE,8BAAA1E,EAAA,yDACb2E,EAAK,CACL5C,OACA6C,MAAO3C,EACPE,cACAE,OACAuB,eACAiB,YAAcnB,GACdI,SACAE,gBACAE,iBACAY,YAAYxC,GAXC,SAcbrC,QAAQC,IAAI,QAAU2C,EAAIW,KACX,OAARH,GAfM,gCAegBgB,IAAMU,IAAN,UAAarF,IAAb,eAA2BmD,EAAIW,KAAQmB,GAfvD,6CAesE,aAARtB,GAf9D,kCAe0FgB,IAAMU,IAAN,UAAarF,IAAb,qBAAiCmD,EAAIW,KAAQmB,GAfvI,+CAgBT,UAARtB,GAhBiB,kCAgBQgB,IAAMU,IAAN,UAAarF,IAAb,kBAA8BmD,EAAIW,KAAQmB,GAhBlD,6DAgB+DN,IAAMU,IAAN,UAAarF,IAAb,mBAA+BmD,EAAIW,KAAQmB,GAhB1G,gEAebJ,EAfa,KAiBjBtE,QAAQC,IAAI,OAASqE,GACH,KAAfA,EAAK7D,SACJG,MAAM,uBACNmE,OAAOC,SAAS/B,UApBH,kDAwBbjD,QAAQC,IAAI,MAAZ,MAxBa,0DAAF,qDA8BbgF,GAAU,uCAAG,4BAAAlF,EAAA,kEAEXC,QAAQC,IAAI,SACRyE,EAAO,CACPQ,WAAatC,EAAIW,IACjB4B,KAAOrC,GAEQ,OAARM,GAPA,gCAOsBgB,IAAMgB,KAAN,UAAc3F,IAAd,WAAiCiF,GAPvD,6CAOsE,aAARtB,GAP9D,kCAO0FgB,IAAMgB,KAAN,UAAc3F,IAAd,iBAAuCiF,GAPjI,+CAQP,UAARtB,GARe,kCAQUgB,IAAMgB,KAAN,UAAc3F,IAAd,cAAoCiF,GAR9C,6DAQ2DN,IAAMgB,KAAN,UAAc3F,IAAd,eAAqCiF,GARhG,sEAUZN,IAAM3D,OAAS,OACdG,MAAM,oCACNmC,GAAO,IACPE,IAAO,IAbI,kDAgBe,KAAvB,KAAIzC,SAASC,SACZsC,GAAO,IACPnC,MAAM,2BAlBC,0DAAH,qDA0BhByE,qBAAU,WAAI,4CAEV,gCAAAtF,EAAA,yDACuB,OAAPqD,GADhB,gCACqCgB,IAAMkB,IAAN,UAAa7F,IAAb,eAA2BmC,EAAMsB,MAAMC,OAAOE,KADnF,6CACkG,aAAPD,GAD3F,iCACqHgB,IAAMkB,IAAN,UAAa7F,IAAb,qBAAiCmC,EAAMsB,MAAMC,OAAOE,KADzK,8CAEW,UAAPD,GAFJ,kCAE4BgB,IAAMkB,IAAN,UAAa7F,IAAb,kBAA8BmC,EAAMsB,MAAMC,OAAOE,KAF7E,6DAE0Fe,IAAMkB,IAAN,UAAa7F,IAAb,mBAA+BmC,EAAMsB,MAAMC,OAAOE,KAF5I,gEACQiB,EADR,KAGItE,QAAQC,IAAI,OAASqE,GACH,KAAfA,EAAK7D,SACJsB,EAAQuC,EAAKA,KAAKxC,MAClBe,EAAOyB,EAAKA,MACZnC,EAAemC,EAAKA,KAAKpC,aACzBD,EAAYqC,EAAKA,KAAKK,OACtBnB,GAAOc,EAAKA,KAAKf,KACjBe,EAAKA,KAAKY,YAAc5B,GAAMgB,EAAKA,KAAKY,YACxCZ,EAAKA,KAAKM,aAAelB,GAASY,EAAKA,KAAKM,aAC5CN,EAAKA,KAAKX,aAAeC,GAAcU,EAAKA,KAAKX,aACjDW,EAAKA,KAAKO,aAAevC,EAAagC,EAAKA,KAAKO,aAChDP,EAAKA,KAAKiB,YAAchD,EAAa+B,EAAKA,KAAKiB,YAC/CjB,EAAKA,KAAKO,aAAef,GAASQ,EAAKA,KAAKO,YAAcP,EAAKA,KAAKK,OACpEL,EAAKA,KAAKL,eAAiBC,GAAMI,EAAKA,KAAKL,eAC3CK,EAAKA,KAAKP,cAAgBC,GAAMM,EAAKA,KAAKP,cAEtCQ,EAAUD,EAAKA,KAAKC,QACpBiB,EAAgB,GACpBjB,EAAQkB,KAAI,SAACC,EAAIC,GAETH,EAAa,sBAAOA,GADb,WAARpC,GACc,CAAuB,CAChC,OAAQuC,EAAE,EAAI,GAAN,WAAeA,EAAE,GAAMA,EAAE,EACjC,eAAY,IAAIC,KAAKF,EAAEG,MAAMC,UAA7B,YAA0C,IAAIF,KAAKF,EAAEG,MAAME,WAAW,EAAtE,YAA2E,IAAIH,KAAKF,EAAEG,MAAMG,eAC5F,SAAWN,EAAE1D,SAAU0D,EAAE1D,SAASiE,QAAQ,GAAK,KAC/C,OAASP,EAAEQ,SAGF,CAAuB,CAChC,OAAQP,EAAE,EAAI,GAAN,WAAeA,EAAE,GAAMA,EAAE,EACjC,eAAY,IAAIC,KAAKF,EAAEG,MAAMC,UAA7B,YAA0C,IAAIF,KAAKF,EAAEG,MAAME,WAAW,EAAtE,YAA2E,IAAIH,KAAKF,EAAEG,MAAMG,eAC5F,SAAW,GAAX,OAAeN,EAAE1D,SAAjB,cAA+BsC,EAAKA,KAAKO,YAAzC,cAA0Da,EAAE1D,SAAWsC,EAAKA,KAAKO,aACjF,QAAYa,EAAE1D,SAASiE,QAAQ,GAC/B,GAAOP,EAAEnC,UAKrBZ,EAAQ6C,IAxChB,6CAFU,sBA8CV,OA9CW,WAAD,wBA6CVW,GACO,WACHlD,IAAO,MAEZ,CAACD,KAEJ,IAAMoD,GAAc,uCAAG,WAAMC,GAAN,eAAAtG,EAAA,+EAECqE,IAAMC,OAAN,UAAgB5E,IAAhB,mBAAkC8D,GAAlC,YAAyC8C,IAF1C,OAGG,MADd/B,EAFW,QAGP7D,SACJG,MAAM,wBACNqC,IAAO,IAEO,KAAfqB,EAAK7D,SACJG,MAAM,4BACNqC,IAAO,IAEXjD,QAAQC,IAAI,OAASqE,GAXN,gDAaf1D,MAAM,EAAD,IAbU,yDAAH,sDA+BpB,OADDZ,QAAQC,IAAI,WAAa+B,GAEpB,kBAAC,IAAD,CAAYsE,GAAG,MACJ,kBAAC,IAAD,KACiB,UAARlD,IACD,kBAAC,IAAD,CAAOmD,MAAO,CAACC,MAAM,SACrB,kBAAC,IAAD,KAAa,gCAAQ,2BAjB7B,OAARpD,GACQ,eACM,UAARA,GACG,kBACK,aAARA,GACG,qBAEA,mBAW2B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,gCACI,kBAAC,IAAD,CAAQmD,MAAO,CAACC,MAAM,OAASC,YAAqB,WAARrD,GAAoB,oBAAqB,qBAAwBsD,UAAQ,EAACC,MAAO7D,EAAK8D,SAAU,SAACC,GAAD,OAAM9D,GAAO8D,EAAEC,OAAOH,aAO9K,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMJ,MAAO,CAACQ,UAAU,SACpB,gCACA,kBAAC,IAAD,CAASC,QAAS/B,GAAYsB,MAAO,CAACC,MAAM,MAAOS,OAAK,EAACC,QAAQ,UAAUC,MAAM,QAAiB,WAAR/D,GAAoB,MAAQ,aAYrK,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQmD,MAAO,CAACC,MAAM,QAAQF,GAAG,MACD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,kBAII,kBAAC,IAAD,CAAMC,MAAO,CAACa,QAAQ,OAASC,eAAe,aAC9C,kBAAC,IAAD,CAAOL,QAAS,kBAAIvC,MAAiB8B,MAAO,CAACe,WAAW,OAASC,OAAO,WAAYzF,KAAK,aAEzF,kBAAC,IAAD,CAAOkF,QAAS,kBAAI7C,MAAiBoC,MAAO,CAACe,WAAW,OAASC,OAAO,WAAYzF,KAAK,cACzF,kBAAC,IAAD,CAAOkF,QAAS,WAAKpF,EAAM2C,QAAQiD,KAAK,oBAAoBjE,KAAOgD,MAAO,CAACe,WAAW,OAASC,OAAO,WAAYzF,KAAK,gBAKnI,kBAAC,IAAD,KAEQuB,IACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMoE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,cACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,mBAAmBC,UAAQ,EAACC,MAAOtD,GAAIuD,SAAU,SAACC,GAAD,OAAMvD,GAAMuD,EAAEC,OAAOH,aAmBhH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMc,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,QACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,sBAAsBC,UAAQ,EAACC,MAAO7E,EAAM8E,SAAU,SAACC,GAAD,OAAM9E,EAAQ8E,EAAEC,OAAOH,aAIvH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMc,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,YAAhB,eACA,kBAAC,IAAD,CAAQrE,GAAG,WAAWoD,YAAY,uBAAwBE,MAAOzE,EAAa0E,SAAU,SAACC,GAAD,OAAM1E,EAAe0E,EAAEC,OAAOH,aAIvH,WAAPvD,IACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,YAAhB,eACA,kBAAC,IAAD,CAAQC,KAAM,SAAStE,GAAG,WAAWoD,YAAY,4BAA4BC,UAAQ,EAAEC,MAAOtE,EAAQuE,SAAU,SAACC,GAAD,OAAMvE,EAAauE,EAAEC,OAAOH,aAgB3I,WAAPvD,IACF,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,YAAhB,mBACA,kBAAC,IAAD,CAAQC,KAAK,SAAStE,GAAG,WAAWoD,YAAY,oBAAoBC,UAAQ,EAAEC,MAAO3E,GAAYA,EAAU4E,SAAU,SAACC,GAAD,OAAM5E,EAAY4E,EAAEC,OAAOH,aAqBhJ,WAARvD,IACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,eACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,sBAAsBC,UAAQ,EAACC,MAAOlD,GAAOmD,SAAU,SAACC,GAAD,OAAMnD,GAASmD,EAAEC,OAAOH,aAO7G,WAARvD,IACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,eACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,sBAAsBC,UAAQ,EAACC,MAAOhD,GAAaiD,SAAU,SAACC,GAAD,OAAMjD,GAAciD,EAAEC,OAAOH,aAOxH,WAARvD,IACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,iBACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,gBAAgBC,UAAQ,EAACC,MAAO9C,IAASA,GAAMoC,QAAQ,GAAIW,SAAU,SAACC,GAAD,OAAM/C,GAAS+C,EAAEC,OAAOH,aAOzH,WAARvD,IACF,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,iBACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,aAAaC,UAAQ,EAACC,MAAO1C,GAAe2C,SAAU,SAACC,GAAD,OAAM3C,GAAM2C,EAAEC,OAAOH,aAO1G,WAARvD,IACC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMqE,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,gBACA,kBAAC,IAAD,CAAQrE,GAAG,OAAOoD,YAAY,YAAYC,UAAQ,EAACC,MAAO5C,GAAc6C,SAAU,SAACC,GAAD,OAAM7C,GAAM6C,EAAEC,OAAOH,aAMnH,kBAAC,IAAD,CAAMJ,MAAO,CAACC,MAAM,SAEZ,kBAAC,IAAD,CAAMD,MAAO,CAAEqB,UAAU,WACrB,uCAGT,kBAAC,IAAD,CACKC,MAAOnF,EACPF,OAAgB,WAARY,GAAoBZ,EAASC,EACrCqF,YAAa,CAET,OACI,SAACC,GAAD,OACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,KAAK3B,GAAG,MACpB,kBAAC,IAAD,CAASW,OAAK,EAACE,MAAM,SAASH,QAAS,kBAAKZ,GAAe2B,EAAK1E,MAAhE","file":"static/js/9.5c27affc.chunk.js","sourcesContent":["export const baseURL = \"http://localhost:8000/api/\"\r\n// \"https://maclay.herokuapp.com/api/\";\r\nexport const basePATH = \"https://maclay.herokuapp.com/\"\r\n\r\n\r\n// export const baseURL = \"http://localhost:8000/api/\"\r\n// // \"https://maclay.herokuapp.com/api/\";\r\n// export const basePATH = \"http://localhost:8000/\"\r\n\r\n","\r\nimport { baseURL } from \"../url\";\r\nconst POST_METHOD = async (payload, url , token)=> {\r\n    console.log(payload,baseURL + `${url}` , 'yes')\r\n    try {\r\n        let response =await  fetch(\r\n            baseURL + `${url}`,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'authorization' : `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(payload)\r\n            })\r\n            let res;\r\n            console.log(\"respone\" , response)\r\n            if(response.status == 200){\r\n                res = await response.json();\r\n               alert(\"Successfully Added\")\r\n                return res\r\n            }else if(response.status == 401){\r\n                res = await response.json();\r\n                console.log(\"respone\" , res)\r\n              \r\n            }else if(response.status == 404){\r\n                res = await response.json();\r\n                console.log(\"respone\" , res)\r\n              \r\n            }else if(response.status == 400){\r\n                res = await response.json();\r\n                console.log(\"400\" , res)\r\n                alert(res.details[0].message)\r\n            }\r\n            else if(response.status == 202){\r\n                res = await response.json();\r\n                console.log(\"400\" , res)\r\n                alert(\"Already Exists\")\r\n            }\r\n    }\r\n    catch (error) {\r\n        console.log(\"err\" , error)\r\n        alert(error)\r\n        // console.error(error);\r\n    }\r\n}\r\n\r\n\r\nexport default POST_METHOD;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\r\nimport React, { useState, useEffect } from 'react'\r\nimport {\r\n    CCol,\r\n    CRow,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput,\r\n    CContainer,\r\n    CButton,\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react';\r\nimport POST_METHOD from \"../../apimiddleware/postMethod\";\r\nimport { baseURL } from '../../apimiddleware/url';\r\nimport axios from \"axios\"\r\n\r\nconst Form = (props) => {\r\n    const [date  , setDate] = useState();\r\n    const [month  , setMonth] = useState();\r\n    const [year  , setYear] = useState();\r\n    const [name , setName] = useState('');\r\n    const [quantity , setQuantity] = useState();\r\n    const [description , setDescription] = useState('');\r\n    const [size  , setSize] = useState()\r\n    const [s_size , setSouthSize] = useState('');\r\n    const [n_size , setNorthSize] = useState('');\r\n    \r\n    const [fields] = useState([\"S.NO\" ,\"Date\"  , \"Quantity\" , \"Action\"]);\r\n    const [Product_fields] = useState([\"S.NO\" ,\"Date\"  ,\"Cartons\", \"Quantity\"  , \"Delete\" ]);\r\n    \r\n    const [usersData , setData] = useState([]);\r\n    const [all , setAll] = useState([]);\r\n    const [use , setUse] = useState('');\r\n    const [load , reload] = useState(false);\r\n    const [page , setPage] = useState(props.match.params.page);;\r\n    const [id , setId] = useState('');\r\n    const [_id , set_id] = useState('');\r\n    const [price , setPrice] = useState('');\r\n    const [north_price , setNorthPrice] = useState('');\r\n    const [total , setTotal] = useState('');\r\n    const [product_size , setPS] = useState('');\r\n    const [product_color , setPC] = useState('');\r\n    \r\n        \r\n    const deleteProduct =async()=>{\r\n        try{\r\n            console.log(\"start\" , all._id);\r\n        let data = page == \"raw\" ? await axios.delete(`${baseURL}raw/${all._id}`) : page == \"packaging\" ? await axios.delete(`${baseURL}packaging/${all._id}`) :\r\n        page == \"finish\" ? await axios.delete(`${baseURL}finish/${all._id}`) : await axios.delete(`${baseURL}product/${all._id}`)\r\n        console.log(\"data\" , data);\r\n        if(data.status == 200){\r\n            alert(\"Succesfully Deleted\");\r\n                props.history.goBack()\r\n            \r\n            \r\n        }\r\n        }catch(err){\r\n            console.log(\"err\" , err);\r\n        }\r\n        \r\n    }\r\n\r\n    const updateProduct =async()=>{\r\n        let obj ={\r\n            name  , \r\n            stock :quantity , \r\n            description , \r\n            size , \r\n            north_price ,\r\n            south_price : price, \r\n            total , \r\n            product_size , \r\n            product_color,\r\n            carton_size:s_size\r\n        }\r\n        try{\r\n            console.log(\"start\" , all._id);\r\n        let data = page == \"raw\" ? await axios.put(`${baseURL}raw/${all._id}` , obj) : page == \"packaging\" ? await axios.put(`${baseURL}packaging/${all._id}` , obj) :\r\n        page == \"finish\" ? await axios.put(`${baseURL}finish/${all._id}` , obj) : await axios.put(`${baseURL}product/${all._id}` , obj)\r\n        console.log(\"data\" , data);\r\n        if(data.status == 200){\r\n            alert(\"Succesfully Updated\");\r\n            window.location.reload()\r\n            // window.location =\"#/inventory/rawmaterial\"\r\n        }\r\n        }catch(err){\r\n            console.log(\"err\" , err);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const useProduct = async()=> {\r\n        try{\r\n            console.log(\"start\");\r\n            let obj  = {\r\n                product_id : all._id,\r\n                used : use\r\n            }\r\n            let data = page == \"raw\" ? await axios.post(`${baseURL}raw/use` , obj) : page == \"packaging\" ? await axios.post(`${baseURL}packaging/use` , obj) :\r\n        page == \"finish\" ? await axios.post(`${baseURL}finish/use` , obj) : await axios.post(`${baseURL}product/use` , obj)\r\n        \r\n        if(axios.status = 200){\r\n            alert(\"Successfully Update this product\");\r\n            setUse('');\r\n            reload(true)\r\n        }\r\n        }catch(err){\r\n            if(err.response.status == 400){\r\n                setUse('');\r\n                alert(\"Not have Enough Amount\");\r\n               \r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n            let data =  page ==\"raw\" ? await axios.get(`${baseURL}raw/${props.match.params.id}`):  page ==\"packaging\" ?await axios.get(`${baseURL}packaging/${props.match.params.id}`) :\r\n            page ==\"finish\" ? await axios.get(`${baseURL}finish/${props.match.params.id}`) :await axios.get(`${baseURL}product/${props.match.params.id}`) ;\r\n            console.log(\"data\" , data);\r\n            if(data.status == 200){\r\n                setName(data.data.name);\r\n                setAll(data.data);\r\n                setDescription(data.data.description);\r\n                setQuantity(data.data.stock);\r\n                set_id(data.data._id);\r\n                data.data.product_id && setId(data.data.product_id);\r\n                data.data.south_price && setPrice(data.data.south_price);\r\n                data.data.north_price && setNorthPrice(data.data.north_price);\r\n                data.data.carton_size && setSouthSize(data.data.carton_size);\r\n                data.data.north_size && setNorthSize(data.data.north_size);\r\n                data.data.carton_size && setTotal(data.data.carton_size * data.data.stock);\r\n                data.data.product_color && setPC(data.data.product_color);\r\n                data.data.product_size && setPS(data.data.product_size);\r\n                \r\n                let history = data.data.history;\r\n                let final_history = []\r\n                history.map((m , i)=>{\r\n                    if(page != \"product\" ){\r\n                        final_history = [...final_history , {\r\n                            \"S.NO\" :i+1 < 10 ? `0${i+1}` : i+1,\r\n                            \"Date\" : `${new Date(m.date).getDate()}/${new Date(m.date).getMonth()+1}/${new Date(m.date).getFullYear()}`,\r\n                            \"Quantity\":m.quantity ?m.quantity.toFixed(2) : \"NO\" ,\r\n                            \"Action\":m.action \r\n                        }]\r\n                    }else{\r\n                        final_history = [...final_history , {\r\n                            \"S.NO\" :i+1 < 10 ? `0${i+1}` : i+1,\r\n                            \"Date\" : `${new Date(m.date).getDate()}/${new Date(m.date).getMonth()+1}/${new Date(m.date).getFullYear()}`,\r\n                            \"Quantity\": `${m.quantity} x ${data.data.carton_size} = ${m.quantity * data.data.carton_size}`,\r\n                            \"Cartons\" : m.quantity.toFixed(2),\r\n                            \"id\" : m._id \r\n                        }]\r\n                    }\r\n                    \r\n                }) \r\n                setData(final_history)                \r\n            }\r\n        }\r\n        fetchData()\r\n        return ()=>{\r\n            reload(false)\r\n        }\r\n    }, [load])\r\n\r\n    const deleteProducts = async(q_id)=>{\r\n        try{\r\n            let data =await axios.delete(`${baseURL}product/${_id}/${q_id}`);\r\n            if(data.status == 200){\r\n                alert(\"Deleted Successfully\")\r\n                reload(true)\r\n            }\r\n            if(data.status == 201){\r\n                alert(\"Cannot Delete this Entry\")\r\n                reload(true)\r\n            }\r\n            console.log(\"data\" , data);\r\n        }catch(err){\r\n            alert(err)\r\n        }\r\n    }\r\n    \r\n    const showName = ()=>{\r\n        let name = \"\"\r\n        if(page == \"raw\"){\r\n            name = \"Raw Material\" \r\n        }else if(page == \"finish\"){\r\n            name  = \"Finish Material\"\r\n        }else if(page == \"packaging\"){\r\n            name  = \"Packaging Material\"\r\n        }else{\r\n            name  = \"Final Product\"\r\n        }\r\n        return name\r\n    }\r\n   console.log(\"quantity\" , quantity);\r\n    return (\r\n        <CContainer lg=\"12\">\r\n                   <CRow>\r\n                       {    page != \"finish\" && \r\n                           <CCard style={{width:\"100%\"}}>\r\n                           <CCardHeader><center><b>{showName()}</b></center></CCardHeader>    \r\n                                               <CCardBody>\r\n                                                   <CRow>\r\n                                                       <CCol >\r\n                                                           <center>\r\n                                                               <CInput style={{width:\"50%\"}}  placeholder={page == \"product\" ? \"Add More Quantity\" :\"Enter Use Quantity\" }  required value={use} onChange={(e)=> setUse(e.target.value)}/>\r\n                                                       \r\n                                                           </center>\r\n                                                                               \r\n                                                       </CCol>\r\n                                                       \r\n                                                   </CRow>\r\n                                                   <CRow>\r\n                                                       <CCol style={{marginTop:\"20px\"}}>\r\n                                                           <center>\r\n                                                           <CButton onClick={useProduct} style={{width:\"7%\"}} block variant=\"outline\" color=\"dark\" >{page == \"product\" ? \"Add\" : \"Use\"}</CButton>\r\n                                                           </center>      \r\n                                                       </CCol>\r\n                                                       \r\n                                                   </CRow>\r\n                                                   \r\n                                               </CCardBody>\r\n                                           </CCard>\r\n                       \r\n                       }\r\n                    \r\n                  </CRow>\r\n            <CRow>\r\n            <CCard  style={{width:\"100%\"}}lg=\"12\">\r\n                                            <CCardHeader>\r\n                                                <CRow>\r\n                                                    <CCol>\r\n                                                    Edit Form\r\n                                                \r\n                                                        </CCol>    \r\n                                                        <CCol style={{display:\"flex\" , justifyContent:\"flex-end\"}}>\r\n                                                        <CIcon onClick={()=>updateProduct()} style={{marginLeft:\"10px\" , cursor:\"pointer\"}} name=\"cil-save\" />\r\n                                                        \r\n                                                        <CIcon onClick={()=>deleteProduct()} style={{marginLeft:\"10px\" , cursor:\"pointer\"}} name=\"cil-trash\" />\r\n                                                        <CIcon onClick={()=>{props.history.push(\"/inventory/sales/\"+_id)}} style={{marginLeft:\"10px\" , cursor:\"pointer\"}} name=\"cil-list\" />\r\n                                                        \r\n                                                        </CCol>\r\n                                                </CRow>\r\n                                            </CCardHeader>\r\n                                            <CCardBody>\r\n                                                {\r\n                                                    id && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Product Id</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Enter product Id\" required value={id} onChange={(e)=> setId(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n\r\n                                                }\r\n                                           \r\n                                                {/* {\r\n                                                    page == \"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Name</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Enter Material Name\" required value={name} onChange={(e)=> setName(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                } */}\r\n                                                <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Name</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Enter Material Name\" required value={name} onChange={(e)=> setName(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"ccnumber\">Description</CLabel>\r\n                                                            <CInput id=\"ccnumber\" placeholder=\"Material Description\"  value={description} onChange={(e)=> setDescription(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                {   page ==\"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"ccnumber\">Carton Size</CLabel>\r\n                                                            <CInput type =\"number\" id=\"ccnumber\" placeholder=\"Number of Items in Carton\" required  value={s_size} onChange={(e)=> setSouthSize(e.target.value)} />\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                }\r\n                                                {/* {   page ==\"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"ccnumber\">North Region Carton Size</CLabel>\r\n                                                            <CInput type =\"number\" id=\"ccnumber\" placeholder=\"Number of Items in Carton\" required  value={n_size} onChange={(e)=> setNorthSize(e.target.value)} />\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                } */}\r\n                                                {\r\n                                                      page ==\"product\"  &&  \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"ccnumber\">Carton Quantity</CLabel>\r\n                                                            <CInput type=\"number\" id=\"ccnumber\" placeholder=\"Number Of Cartons\" required  value={quantity && quantity} onChange={(e)=> setQuantity(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                         \r\n                                                \r\n                                                }\r\n                                                {/* {\r\n                                                    quantity && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"ccnumber\">Carton Quantity</CLabel>\r\n                                                            <CInput type=\"number\" id=\"ccnumber\" placeholder=\"Number Of Cartons\" required  value={quantity} onChange={(e)=> setQuantity(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                         \r\n                                                \r\n                                                } */}\r\n                                                 {\r\n                                                    page == \"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">South Price</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Enter Product Price\" required value={price} onChange={(e)=> setPrice(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                }\r\n                                                 {\r\n                                                    page == \"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">North Price</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Enter Product Price\" required value={north_price} onChange={(e)=> setNorthPrice(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                }\r\n                                                 {\r\n                                                    page == \"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Item Quantity</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Item Quantity\" required value={total && total.toFixed(2)} onChange={(e)=> setTotal(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                }\r\n                                                 {\r\n                                                      page == \"product\" &&  \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Product Color</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Item Color\" required value={product_color} onChange={(e)=> setPC(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                } \r\n                                                {\r\n                                                   page == \"product\" && \r\n                                                    <CRow>\r\n                                                    <CCol xs=\"12\">\r\n                                                        <CFormGroup>\r\n                                                            <CLabel htmlFor=\"name\">Product Size</CLabel>\r\n                                                            <CInput id=\"name\" placeholder=\"Item Size\" required value={product_size} onChange={(e)=> setPS(e.target.value)}/>\r\n                                                        </CFormGroup>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                                    \r\n                                                }\r\n                                                <CRow style={{width:\"100%\"}} >\r\n                                               \r\n                                                        <CCol style={{ textAlign:\"center\"}}>\r\n                                                            <b >History</b>\r\n                                                           \r\n                                                        </CCol>\r\n                                                   <CDataTable\r\n                                                        items={usersData}\r\n                                                        fields={page != \"product\" ? fields : Product_fields}\r\n                                                        scopedSlots={{\r\n\r\n                                                            \"Delete\":\r\n                                                                (item) => (\r\n                                                                    <td >\r\n                                                                        <CCol sm=\"4\" md=\"12\" lg=\"12\" >\r\n                                                                            <CButton block color=\"danger\" onClick={()=> deleteProducts(item.id)} >Delete</CButton>\r\n                                                                        </CCol>\r\n                                                                    </td>\r\n                                                                ),\r\n                                                        }}\r\n                                                        />\r\n                                                   \r\n                                                </CRow>\r\n                                                \r\n                                            </CCardBody>\r\n                                        </CCard>\r\n            </CRow>\r\n\r\n        </CContainer>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"],"sourceRoot":""}