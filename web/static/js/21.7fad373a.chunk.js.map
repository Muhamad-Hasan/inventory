{"version":3,"sources":["apimiddleware/url.js","views/dashboard/Dashboard.js"],"names":["baseURL","basePATH","WidgetsDropdown","lazy","Dashboard","props","useState","Date","date","addDays","from","setFrom","to","setTo","usersData","setData","total","setTotal","count","setCount","useEffect","a","axios","get","data","status","fetch","post","final_data","console","log","real_data","map","text","index","c_id","name","invoice_no","createdAt","total_amount","fetachData","style","display","flexDirection","justifyContent","textAlign","format","onChange","value","marginTop","items","fields","striped","scopedSlots","item","cursor","onClick","history","push","pathname","state","toFixed","fontSize","fontWeight","position","right"],"mappings":"6KAAA,oEAAO,IAAMA,EAAU,6BAEVC,EAAW,iC,iLCiBlBC,EAAkBC,gBAAK,kBAAM,kCAuIpBC,UArIG,SAACC,GAAW,IAAD,EAEHC,mBAAS,IAAIC,KAAKC,IAAKC,QAAQ,IAAIF,MAAU,KAF1C,mBAEpBG,EAFoB,KAEdC,EAFc,OAGPL,mBAAS,IAAIC,MAHN,mBAGpBK,EAHoB,KAGhBC,EAHgB,OAKGP,mBAAS,IALZ,mBAKpBQ,EALoB,KAKRC,EALQ,OAMAT,qBANA,mBAMpBU,EANoB,KAMZC,EANY,OAOAX,qBAPA,mBAOpBY,EAPoB,KAOZC,EAPY,KAuD3B,OA7CAC,qBAAU,WAAI,4CACZ,4BAAAC,EAAA,sEACmBC,IAAMC,IAAN,UAAavB,IAAb,sBADnB,OAEoB,MADdwB,EADN,QAEUC,QACNN,EAASK,EAAKA,MAHlB,4CADY,uBAAC,WAAD,wBAQZE,KACE,IAEJN,qBAAU,WAAI,4CACV,kCAAAC,EAAA,sEACkBC,IAAMK,KAAN,UAAc3B,IAAd,iBAAuC,CACrDU,KAAOA,EACPE,GAAKA,IAHT,OAMmB,MALbY,EADN,QAMUC,QACFG,EAAaJ,EAAKA,KACtBK,QAAQC,IAAI,OAASN,GACjBO,EAAY,GACZf,EAAQ,EACZY,EAAWI,KAAI,SAACC,EAAOC,GACnBH,EAAS,sBAAOA,GAAP,CAAmB,CAC1B,OAASG,EAAM,EACf,gBAAkBD,EAAKE,KAAKC,KAC5B,aAAcH,EAAKI,WACnB,KAASJ,EAAKK,UACd,eAAeL,EAAKM,aACpBf,KAAOS,KAETjB,GAAgBiB,EAAKM,gBAEzBxB,EAAQgB,GACRd,EAASD,IAITa,QAAQC,IAAI,OAASN,GA3BzB,4CADU,uBAAC,WAAD,wBAgCVgB,KACA,CAAC5B,EAAKF,EAAOC,IAEf,oCACE,kBAACT,EAAD,CAAiBgB,MAAOA,IACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMuB,MAAO,CAACC,QAAS,OAAQC,cAAc,MAAQC,eAAe,iBAClE,yBAAKH,MAAO,CAACI,UAAU,WACnB,oCACA,kBAAC,IAAD,CAEAC,OAAO,aACPC,SAAUpC,EACVqC,MAAOtC,KAGX,6BACI,wBAAI+B,MAAO,CAACI,UAAU,WAAtB,MACA,kBAAC,IAAD,CAEAC,OAAO,aACPC,SAAUlC,EACVmC,MAAOpC,OASf,kBAAC,IAAD,CAAM6B,MAAO,CAACQ,UAAU,SACxB,kBAAC,IAAD,CACIC,MAAOpC,EACPqC,OArFG,CAAC,OAAS,gBAAkB,aAAe,OAAQ,gBAsFtDC,SAAO,EACPC,YAAe,CACb,aACA,SAACC,GAAD,OACI,wBAAIb,MAAO,CAACc,OAAO,WAAYC,QAAS,kBAAKnD,EAAMoD,QAAQC,KAAK,CAACC,SAAS,gBAAiBC,MAAMN,EAAK9B,SACjG8B,EAAK,gBAId,KAAO,SAAP,oGAAO,EACP,SAACA,GAAD,OACI,4BACK9C,IAAKsC,OAAO,IAAIvC,KAAK+C,EAAI,MAAW,0BAI7C,eACA,SAACA,GAAD,OACI,4BACKA,GAAQA,EAAK,gBAAgBO,QAAQ,SASpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpB,MAAO,CAACI,UAAU,UACzB,uBAAGJ,MAAO,CAACqB,SAAS,OAASC,WAAW,OAAQC,SAAS,WAAaC,MAAM,UAA5E,gBAAoGjD,GAASA,EAAM6C,QAAQ,GAA3H","file":"static/js/21.7fad373a.chunk.js","sourcesContent":["export const baseURL = \"http://localhost:8000/api/\"\r\n// \"https://maclay.herokuapp.com/api/\";\r\nexport const basePATH = \"https://maclay.herokuapp.com/\"\r\n\r\n\r\n// export const baseURL = \"http://localhost:8000/api/\"\r\n// // \"https://maclay.herokuapp.com/api/\";\r\n// export const basePATH = \"http://localhost:8000/\"\r\n\r\n","import React, { lazy, useState , useEffect } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout , \r\n  CDataTable , \r\n  } from '@coreui/react'\r\nimport DatePicker from 'react-date-picker';\r\nimport date from \"date-and-time\"\r\nimport axios from \"axios\";\r\nimport {baseURL} from \"../../apimiddleware/url\"\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown'))\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [from, setFrom] = useState(new Date(date.addDays(new Date() , -7)));\r\n  const [to, setTo] = useState(new Date());\r\n  const fields = [\"S.No\" , \"Customer Name\" , \"Invoice No\" , \"Date\" ,\"Total Amount\"  ];\r\n  const [usersData , setData] = useState([])\r\n  const [total , setTotal] = useState()\r\n  const [count , setCount] = useState()\r\n  \r\n\r\n  useEffect(()=>{\r\n    async function fetch(){\r\n      let data = await axios.get(`${baseURL}invoice/all/count`);\r\n      if(data.status == 200){\r\n        setCount(data.data)\r\n      }\r\n      \r\n    }\r\n    fetch()\r\n  } , [])\r\n\r\n  useEffect(()=>{\r\n      async function fetachData(){\r\n        let data =await axios.post(`${baseURL}invoice/dates` , {\r\n          from : from , \r\n          to : to\r\n        })\r\n        \r\n        if(data.status== 200){\r\n          let final_data = data.data;\r\n          console.log(\"data\" , data);\r\n          let real_data = []\r\n          let total = 0\r\n          final_data.map((text , index)=>{\r\n              real_data = [...real_data , {\r\n                \"S.No\" : index+1 ,\r\n                \"Customer Name\" : text.c_id.name,\r\n                \"Invoice No\" :text.invoice_no , \r\n                \"Date\" : text.createdAt,\r\n                \"Total Amount\":text.total_amount,\r\n                data : text\r\n              }]\r\n              total = total + text.total_amount\r\n          })\r\n          setData(real_data)\r\n          setTotal(total)\r\n\r\n        \r\n        }else{\r\n          console.log(\"data\" , data);\r\n        }\r\n        \r\n      }\r\n      fetachData()\r\n  } , [to , from , setFrom])\r\n  return (\r\n    <>\r\n      <WidgetsDropdown count={count} />\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol style={{display :\"flex\" ,flexDirection:\"row\" , justifyContent:\"space-around\"}}>\r\n              <div style={{textAlign:\"center\"}}>\r\n                  <h3>From</h3>\r\n                  <DatePicker\r\n                  \r\n                  format=\"dd/MM/yyyy\"\r\n                  onChange={setFrom}\r\n                  value={from}\r\n                />\r\n              </div>\r\n              <div >\r\n                  <h3 style={{textAlign:\"center\"}}>To</h3>\r\n                  <DatePicker\r\n                  \r\n                  format=\"dd/MM/yyyy\"\r\n                  onChange={setTo}\r\n                  value={to}\r\n                />\r\n              </div>\r\n           \r\n              \r\n              \r\n            </CCol>\r\n\r\n          </CRow>\r\n          <CRow style={{marginTop:\"50px\"}}>\r\n          <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              striped\r\n              scopedSlots = {{\r\n                \"Invoice No\":\r\n                (item) => (\r\n                    <td style={{cursor:\"pointer\"}} onClick={()=> props.history.push({pathname:\"/invoice/view\" ,state:item.data})}>\r\n                        {item[\"Invoice No\"]}  \r\n                      \r\n                    </td>\r\n                ),\r\n                \"Date\":\r\n                (item) => (\r\n                    <td >\r\n                        {date.format(new Date(item[\"Date\"]) ,\"DD/MM/YYYY hh:mm A\" )}  \r\n                      \r\n                    </td>\r\n                ),\r\n                \"Total Amount\":\r\n                (item) => (\r\n                    <td >\r\n                        {item && item[\"Total Amount\"].toFixed(2)}  \r\n                      \r\n                    </td>\r\n                ),\r\n              \r\n\r\n              }}\r\n            />\r\n          </CRow>\r\n          <CRow>\r\n            <CCol  style={{textAlign:\"right\"}}>\r\n            <p style={{fontSize:\"20px\" , fontWeight:\"bold\" ,position:\"relative\" , right:\"100px\"}}>Total Sale : {total && total.toFixed(2)} </p>\r\n          \r\n\r\n            </CCol>\r\n           \r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}