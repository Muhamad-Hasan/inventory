{"version":3,"sources":["apimiddleware/url.js","views/inventory/FinalProduct.js"],"names":["baseURL","basePATH","FinalProduct","props","useState","tableData","setData","name","setName","search","setSearch","useEffect","a","axios","get","data","console","log","status","fetchData","fluid","style","display","justifyContent","margin","type","borderRadius","width","height","fontSize","fontWeight","borderColor","placeholder","value","onChange","e","target","color","rounded","size","marginLeft","onClick","length","map","text","index","xs","sm","md","window","location","_id","border","className","padding","paddingLeft","date","format","Date","createdAt","description","carton_size","stock","toFixed","product_size","product_id","south_price","product_color"],"mappings":"6KAAA,oEAAO,IAAMA,EAAU,6BAEVC,EAAW,iC,+JC2HTC,UAnGM,SAACC,GAAW,IAAD,EAECC,mBAAS,IAFV,mBAErBC,EAFqB,KAEVC,EAFU,OAGJF,mBAAS,IAHL,mBAGrBG,EAHqB,KAGfC,EAHe,OAIAJ,oBAAS,GAJT,mBAIrBK,EAJqB,KAIbC,EAJa,KAmB5B,OAbAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,0DACeL,EADf,gCAC4BM,IAAMC,IAAN,UAAad,IAAb,wBAAoCO,IADhE,yDACgFM,IAAMC,IAAN,UAAad,IAAb,YADhF,0BACQe,EADR,KAEIC,QAAQC,IAAI,OAAQF,GACD,KAAfA,EAAKG,QACLZ,EAAQS,EAAKA,MAJrB,6CADY,sBASZ,OATa,WAAD,wBAQZI,GACO,WACHT,GAAU,MAEf,CAACD,IAEA,kBAAC,IAAD,CAAYW,OAAK,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,OAAQ,SAC9D,kBAAC,IAAD,CAAQC,KAAK,OAAOJ,MAAO,CAAEK,aAAc,OAAQC,MAAO,MAAOC,OAAQ,OAAQC,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAWC,YAAY,SAASC,MAAO1B,EAAM2B,SAAU,SAACC,GAAD,OAAO3B,EAAQ2B,EAAEC,OAAOH,UACnN,kBAAC,IAAD,CAAQI,MAAM,UAAUC,SAAO,EAACC,KAAK,KAAKlB,MAAO,CAAEmB,WAAY,QAAUC,QAAS,kBAAM/B,GAAU,KAAlG,YAMR,6BAEA,kBAAC,IAAD,KAEQL,GAAaA,EAAUqC,OAAS,GAChCrC,EAAUsC,KAAI,SAACC,EAAMC,GAEjB,OADA7B,QAAQC,IAAI,OAAS2B,GAGjB,kBAAC,IAAD,CAAME,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIP,QAAS,kBAAIQ,OAAOC,SAAP,mCAA8CN,EAAKO,OACxF,kBAAC,IAAD,CAAO9B,MAAO,CAAC+B,OAAO,kBAAoB1B,aAAa,QAAUW,MAAM,OAAOgB,UAAU,cACpF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMhC,MAAO,CAACC,QAAQ,OAASC,eAAe,kBAC1C,yBAAKF,MAAO,CAACiC,QAAQ,IACjB,2BAAIV,EAAKrC,OAGb,yBAAKc,MAAO,CAACC,QAAQ,OAAUC,eAAe,aAE1C,0BAAMF,MAAO,CAAEkC,YAAY,QACtBC,IAAKC,OAAO,IAAIC,KAAKd,EAAKe,WAAY,kBAOvD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMtC,MAAO,CAAEO,OAAQ,SAClBgB,EAAKgB,cAId,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMvC,MAAO,CAACQ,SAAS,SACnB,2BAAG,4CAAH,cAA4Be,EAAKiB,cACjC,2BAAG,2CAAH,cAA2BjB,EAAKkB,MAAMC,QAAQ,KAC9C,2BAAG,yCAAH,eAA0BnB,EAAKkB,MAAQlB,EAAKiB,aAAaE,QAAQ,KACjE,2BAAG,qCAAH,cAAqBnB,EAAKoB,gBAG9B,kBAAC,IAAD,CAAM3C,MAAO,CAACQ,SAAS,SACnB,2BAAG,qCAAH,cAAqBe,EAAKqB,aAC1B,2BAAG,sCAAH,cAAsBrB,EAAKsB,cAE3B,2BAAG,sCAAH,cAAsBtB,EAAKuB","file":"static/js/22.5ba217b0.chunk.js","sourcesContent":["export const baseURL = \"http://localhost:8000/api/\"\r\n// \"https://maclay.herokuapp.com/api/\";\r\nexport const basePATH = \"https://maclay.herokuapp.com/\"\r\n\r\n\r\n// export const baseURL = \"http://localhost:8000/api/\"\r\n// // \"https://maclay.herokuapp.com/api/\";\r\n// export const basePATH = \"http://localhost:8000/\"\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    CCol,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CRow,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CCardHeader,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput,\r\n    CSelect,\r\n    CCardFooter,\r\n    CButton,\r\n    CContainer\r\n} from '@coreui/react'\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../../apimiddleware/url\";\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport date from 'date-and-time';\r\n\r\nconst FinalProduct = (props) => {\r\n\r\n    const [tableData, setData] = useState([])\r\n    const [name, setName] = useState(\"\");\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let data = name ? await axios.get(`${baseURL}product?name=${name}`) : await axios.get(`${baseURL}product`);\r\n            console.log(\"data\", data);\r\n            if (data.status == 200) {\r\n                setData(data.data);\r\n            }\r\n        }\r\n        fetchData()\r\n        return () => {\r\n            setSearch(false)\r\n        }\r\n    }, [search])\r\n    return (\r\n        <CContainer fluid>\r\n            <CRow>\r\n                <CCol style={{ display: \"flex\", justifyContent: \"center\", margin: \"auto\" }}>\r\n                    <CInput type=\"text\" style={{ borderRadius: \"10px\", width: \"30%\", height: \"50px\", fontSize: \"20px\", fontWeight: \"bold\", borderColor: \"green\" }} placeholder=\"Search\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <MDBBtn color=\"success\" rounded size=\"md\" style={{ marginLeft: \"10px\" }} onClick={() => setSearch(true)}>\r\n                        Search\r\n        </MDBBtn>\r\n\r\n                </CCol>\r\n            </CRow>\r\n            <br />\r\n\r\n            <CRow>\r\n                {\r\n                    tableData && tableData.length > 0 &&\r\n                    tableData.map((text, index) => {\r\n                        console.log(\"text\" , text);\r\n                        return (\r\n\r\n                            <CCol xs=\"12\" sm=\"6\" md=\"4\" onClick={()=>window.location = `#/inventory/form/product/${text._id}`}>\r\n                                <CCard style={{border:\"1px solid black\" , borderRadius:\"15px\" }} color=\"info\" className=\"text-white\">\r\n                                    <CCardHeader>\r\n                                        <CRow style={{display:\"flex\" , justifyContent:\"space-between\"}}>\r\n                                            <div style={{padding:0}}>\r\n                                                <b>{text.name}</b>\r\n\r\n                                            </div>\r\n                                            <div style={{display:\"flex\"  , justifyContent:\"flex-end\"}}>\r\n                                                \r\n                                                <span style={{ paddingLeft:\"10%\" }}>\r\n                                                    {date.format(new Date(text.createdAt), 'DD/MM/YYYY')}\r\n                                                </span>\r\n\r\n                                            </div>\r\n\r\n                                        </CRow>\r\n                                    </CCardHeader>\r\n                                    <CCardBody >\r\n                                        <CRow>\r\n                                            <CCol style={{ height: \"40px\" }}>\r\n                                                {text.description}\r\n                                            </CCol>\r\n\r\n                                        </CRow>\r\n                                        <CRow>\r\n                                            <CCol style={{fontSize:\"12px\" }}>\r\n                                                <p><i>Carton size :</i> {`${text.carton_size}`}</p>\r\n                                                <p><i>C Quantity :</i> {`${text.stock.toFixed(2)}`}</p>\r\n                                                <p><i>Quantity :</i> {`${(text.stock * text.carton_size).toFixed(2)}`}</p>\r\n                                                <p><i>Size :</i> {`${text.product_size}`}</p>\r\n                                                \r\n                                            </CCol>\r\n                                            <CCol style={{fontSize:\"12px\" }}>\r\n                                                <p><i>P.Id :</i> {`${text.product_id}`}</p>\r\n                                                <p><i>Price :</i> {`${text.south_price}`}</p>\r\n                                                {/* <p><i>North Price :</i> {`${text.north_price}`}</p> */}\r\n                                                <p><i>Color :</i> {`${text.product_color}`}</p>\r\n                                                \r\n                                            </CCol>\r\n                                            \r\n                                        </CRow>\r\n\r\n\r\n                                    </CCardBody>\r\n\r\n                                </CCard>\r\n                            </CCol>\r\n\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </CRow>\r\n\r\n\r\n                    </CContainer>\r\n    )\r\n}\r\n\r\nexport default FinalProduct\r\n"],"sourceRoot":""}